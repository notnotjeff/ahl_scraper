continue
info
info[:final]
continue
status
continue
@raw_data[:details][:status]
continue
set_current_game_time
continue
current_period
continue
status
continue
info[:final]
info
continue
current_state
raw_goals
continue
info[:final]
continue
game.played?
continue
game.played?
game.current_period
continue
game.current_time
game.game_id
game
continue
game
continue
team.time_splits
continue
@team_id
continue
@opts[:goals]
continue
@opts[:goals]
team.time_splits
team.on_ice_stats
team.time_splits
continue
team.time_splits
continue
team.time_splits
continue
465 +2400
7*60 +45
@time_elapsed
continue
time_splits
continue
raw_goals[3][:assistNumbers]
raw_goals[2][:assistNumbers]
raw_goals[0][:assistNumbers]
raw_goals[1][:assistNumbers]
raw_goals[1]
raw_goals
goals[0]
goals[1]
continue
goals[1]
game.goals[1]
continue
raw_goals[1]
raw_goals
continue
game.goals.count
game.goals[1]
game.goals.second
continue
game.goals.count
game.goals.length
game.goals.lgenth
game.goals
continue
game.goals.count
game.goals
continue
team_id
on_ice_statline
continue
@on_ice_statline
continue
@on_ice_statline[:gf_as]
continue
on_ice_statline
continue
game.raw_goals
continue
game
continue
game.team_id
game
game.raw_goals
continue
@roster_data[:seasonName]
@roster_data[:roster][0][:sections][1][:data]
@roster_data[:roster][0][:sections][1][0]
@roster_data[:roster][0][:sections][1]
@roster_data[:roster][0][:sections][3]
@roster_data[:roster][0][:sections][4][:title]
@roster_data[:roster][0][:sections][3][:title]
@roster_data[:roster][0][:sections][2][:title]
@roster_data[:roster][0][:sections][1][:title]
@roster_data[:roster][0][:sections][0][:title]
@roster_data[:roster][0][:sections][0].keys
@roster_data[:roster][0][:sections].keys
@roster_data[:roster][0][:sections]
@roster_data[:roster][0][:sections][1]
@roster_data[:roster][0][:sections][0]
@roster_data[:roster][0][:sections]
@roster_data[:roster][0].keys
@roster_data[:roster][0]
@roster_data[:roster].keys
@roster_data[:roster]
@roster_data[:divisionName]
@roster_data[:teamLogo]
@roster_data[:seasonName]
@roster_data[:teamName]
@roster_data.teamName
@roster_data.keys
@roster_data
fetch_roster_data
continue
players.first
players
continue
players.first
continue
players.first
players.first.rookie?
players
continue
a[28]
PlayerObject.new(a[28])
PlayerObject.new(a[27])
PlayerObject.new(a[26])
PlayerObject.new(a[25])
PlayerObject.new(a[24])
PlayerObject.new(a[23])
PlayerObject.new(a[22])
PlayerObject.new(a[21])
PlayerObject.new(a[20])
PlayerObject.new(a[19])
PlayerObject.new(a[18])
PlayerObject.new(a[17])
PlayerObject.new(a[16])
PlayerObject.new(a[15])
PlayerObject.new(a[14])
PlayerObject.new(a[13])
PlayerObject.new(a[12])
PlayerObject.new(a[11])
PlayerObject.new(a[10])
PlayerObject.new(a[9])
PlayerObject.new(a[8])
PlayerObject.new(a[7])
PlayerObject.new(a[6])
PlayerObject.new(a[5])
PlayerObject.new(a[4])
PlayerObject.new(a[3])
PlayerObject.new(a[2])
PlayerObject.new(a[1])
PlayerObject.new(a[0])
a[0]
a=Fetch::TeamRosterData.new(team_id, season_id).call
continue
Fetch::TeamRosterData.new(team_id, season_id).call[0]
Fetch::TeamRosterData.new(team_id, season_id).call
continue
players
continue
players
continue
roster_data[0]
roster_data
continue
@player_bio_data[0]
merge_all_data
continue
(forward_data + defencemen_data + goalie_data).filter { |player| !player[:row][:player_id].nil? }.index_by { |player| player[:row][:player_id] }
(forward_data + defencemen_data + goalie_data).filter { |player| !player[:row][:player_id].nil? }.index_by{ |player| player[:row][:player_id] }
@positional_data
(forward_data + defencemen_data + goalie_data).filter { |player| !player[:row][:player_id].nil? }
@player_data
@roster_data.dig(:roster, 0, :sections)[0..2].map { |players| players[:data] }.flatten
@roster_data.dig(:roster, 0, :sections)[0..2].map { |players| players[:data] }
@roster_data.dig(:roster, 0, :sections)[0..2]
@roster_data.dig(:roster, 0, :sections)
@roster_data
@positional_data
@player_data[0]
@player_data
continue
teams.first.keys
teams.first.name
teams.first.id
teams.first
teams
continue
team_data[0]
team_data
continue
team_data
continue
tt.length
tt
tt=tt.flatten
tt.length
tt.flatten
tt
tt.keys
tt.length
tt=team_data.map { |t| t[:data] }
team_data[0].keys
team_data[0].length
team_data[0]
continue
a.length
a=team_data.flatten
team_data.flatten
team_data[0][:data].length
team_data[0][:data]
team_data[0].keys
team_data[0]
team_data
continue
game.keys
continue
statlines
goal
continue
goal
continue
goal_data
add_scoring_data_to_statlines
create_blank_statlines_for_skaters
continue
{ home_team: false, team_id: away_team.id, team_abbreviation: away_team.abbreviation }
raw_goals.filter { |g| g[:team][:id] == away_team.id }
raw_goals
@raw_data[:visitingTeam][:skaters]
continue
game.away_skaters
continue
ATTRIBUTES.map { |m| p send(m) }
continue
ATTRIBUTES.map { |m| p send(m) }
ATTRIBUTES.map do |m| p m; send(m); end;
ATTRIBUTES.map { |m| p m; send(m); }
ATTRIBUTES.map { |m| p m; send(m) }
ATTRIBUTES.map { |m| send(m) }
ATTRIBUTES.map { |m| p m }
ATTRIBUTES.map { |m| m }
