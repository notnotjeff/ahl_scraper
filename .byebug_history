continue
game.keys
continue
statlines
goal
continue
goal
continue
goal_data
add_scoring_data_to_statlines
create_blank_statlines_for_skaters
continue
{ home_team: false, team_id: away_team.id, team_abbreviation: away_team.abbreviation }
raw_goals.filter { |g| g[:team][:id] == away_team.id }
raw_goals
@raw_data[:visitingTeam][:skaters]
continue
game.away_skaters
continue
ATTRIBUTES.map { |m| p send(m) }
continue
ATTRIBUTES.map { |m| p send(m) }
ATTRIBUTES.map do |m| p m; send(m); end;
ATTRIBUTES.map { |m| p m; send(m); }
ATTRIBUTES.map { |m| p m; send(m) }
ATTRIBUTES.map { |m| send(m) }
ATTRIBUTES.map { |m| p m }
ATTRIBUTES.map { |m| m }
ATTRIBUTES
ATTRIBUTES.map { |m| [m, send(m)] }
ATTRIBUTES.map do |m|
   66:           [m, send(m)]
   67:         end
continue
game.values
game
continue
game.send(:home_skaters)
gamesend(:home_skaters)
game.values
game
game.home_skaters
continue
game.home_skaters
game
continue
game
continue
game
continue
game
continue
game
continue
game
continue
game.keys
game.status
game
continue
game.to_json
game
continue
game.to_json
game
continue
game
continue
game.to_json
continue
game.game_id
continue
game.to_json
game
continue
game.keys
game.values
game.inspect
game
continue
gi=games.dig(0, :sections, 0, :data)&.map { |g| g[:prop][:game_center][:gameLink].to_i }
gi=games.dig([0], :sections)
gi=games.dig(:first, :sections)
gi=games.dig(:first, :sections, :first, :data)&.map { |g| g[:prop][:game_center][:gameLink].to_i }
gi=games.dig(:first, :sections, :data)&.map { |g| g[:prop][:game_center][:gameLink].to_i }
gi.count
gi=games[0][:sections][0][:data].map { |g| g[:prop][:game_center][:gameLink].to_i }
games[0][:sections][0][:data][0]
games[0][:sections][0].keys
games[0].keys
games[0]
games
games.keys
continue
s
continue
season_data.first.name
season_data.first.id
season_data
continue
game.game_id
game.status
game.id
game
continue
data.season_type
data
continue
data[0].methods
data[0].divisions
data[0].teams.length
data[0].teams
data[0].season_type
data.season_type
data
continue
data
continue
s.values
s=SeasonObject.new(season_data[0])
SeasonObject.new(season_data[0])
continue
data
continue
a.select { |s| p season_ids.include? s[:id].to_i }
a.select { |s| p season_ids.include? s["id"].to_i }
a.select { |s| season_ids.include? s["id"].to_i }
a=Fetch::SeasonData.new.call
season_ids
season_data
season_idata
continue
a=Fetch::SeasonData.new.call
season_data
season_ids
continue
data
continue
season_data
continue
season_data[:seasons]
season_data
season_data[0]
season_data
continue
season.divisions
continue
season.teams.last
season.teams.first
season.divisions
season.keys
season
season.teams.length
continue
season.teams.length
season.teams
season.end_year
season
continue
season.teams.first
season.teams.first.keys
season.teams.first.to_json
continue
season.teams.first.to_json
continue
season.teams.first.values
continue
season.teams.first.values
season.teams.first.attributes
season.teams.first.keys
season.teams.first.parameterized_name
season.teams.first
continue
season.teams.first
season.teams
season.teams.first.parameterized_name
continue
season.teams.first.parameterized_name
season.teams.first
season.teams
continue
teams
continue
[1,2,3].map { AhlScraper::Seasons::TeamObject.new({}, "") }
season.teams
continue
[1,2,3].map { AhlScraper::Seasons::TeamObject.new({}, "") }
a=AhlScraper::Seasons::TeamObject.new({}, "")
AhlScraper::Seasons::TeamObject.new
AhlScraper::Seasons::TeamObject
TeamObject
season.teams
season.division_teams
continue
season.teams
continue
season.teams
continue
season.teams
continue
season.teams
continue
TeamObject.new(division[:data][0], division_name)
Array.new(division[:data])
t
continue
division[:data].map { |team| TeamObject.new(team, division_name) }
t
continue
division.dig(:headers, :name, :properties, :title)
division[:data].map { |d| 1 }
t
continue
a.full_name
a=TeamObject.new(team, division.dig(:headers, :name, :properties, :title))
TeamObject.new(team, division.dig(:headers, :name, :properties, :title))
continue
division[:data]
t
continue
season.teams
continue
season.teams
continue
season.teams
continue
season.divisions
continue
season.divisions
continue
season.divisions
continue
season.divisions
season
continue
season
continue
@division_data[0][:data][6]
@division_data[0][:data][5]
@division_data[0]
@division_data
continue
@division_data
continue
@division_data
continue
@division_data
continue
parameterized_name
full_name
continue
full_name
parameterized_name
continue
full_name.split
full_name.split.length > 2
